!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.mnist.MNIST {
        which_set: 'train',
        one_hot: 1,
        start: 0,
        stop: 60000
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [ !obj:forgetting.lwta.LWTA {
                     layer_name: 'h0',
                     dim: 1000,
                     block_size: 2,
                     irange: .03,
                     max_col_norm: 10.
                 }, !obj:forgetting.lwta.LWTA {
                     layer_name: 'h1',
                     dim: 1000,
                     block_size: 2,
                     irange: .03,
                     max_col_norm: 10.
                 }, !obj:forgetting.lwta.LWTA {
                     layer_name: 'h2',
                     dim: 1000,
                     block_size: 2,
                     irange: .03,
                     max_col_norm: 10.
                 }, !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 10,
                     irange: .03,
                     max_col_norm: 10.
                 }
                ],
        nvis: 784
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd_lwta.SGD {
        batch_size: 100,
        learning_rate: 1.,
        init_momentum: .9,
        dropout_momentum: True,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'train',
                              one_hot: 1,
                              start: 50000,
                              stop:  60000
                          },
                'test'  : !obj:pylearn2.datasets.mnist.MNIST {
                              which_set: 'test',
                              one_hot: 1,
                          }
            },
        termination_criterion: !obj:pylearn2.termination_criteria.ChannelTarget {
            channel_name: "train_objective",
            target: 0.00004671578
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd_lwta.ExponentialDecayOverEpoch {
            decay_factor: .95,
            min_lr: .01,
            minibatches_per_epoch: 500
        }
    },
    extensions: [ !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        }, !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 100,
            final_momentum: .95
        }
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
